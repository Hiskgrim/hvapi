{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Url http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/cursos/": {
            "get": {
                "tags": [
                    "cursos"
                ],
                "description": "get Cursos",
                "operationId": "CursosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Cursos"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "cursos"
                ],
                "description": "create Cursos",
                "operationId": "CursosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Cursos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Cursos"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Cursos"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/cursos/{id}": {
            "get": {
                "tags": [
                    "cursos"
                ],
                "description": "get Cursos by id",
                "operationId": "CursosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Cursos"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "cursos"
                ],
                "description": "update the Cursos",
                "operationId": "CursosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Cursos content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Cursos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Cursos"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "cursos"
                ],
                "description": "delete the Cursos",
                "operationId": "CursosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/experiencia_docente/": {
            "get": {
                "tags": [
                    "experiencia_docente"
                ],
                "description": "get ExperienciaDocente",
                "operationId": "ExperienciaDocenteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExperienciaDocente"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "experiencia_docente"
                ],
                "description": "create ExperienciaDocente",
                "operationId": "ExperienciaDocenteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ExperienciaDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExperienciaDocente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ExperienciaDocente"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/experiencia_docente/{id}": {
            "get": {
                "tags": [
                    "experiencia_docente"
                ],
                "description": "get ExperienciaDocente by id",
                "operationId": "ExperienciaDocenteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExperienciaDocente"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "experiencia_docente"
                ],
                "description": "update the ExperienciaDocente",
                "operationId": "ExperienciaDocenteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ExperienciaDocente content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExperienciaDocente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExperienciaDocente"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "experiencia_docente"
                ],
                "description": "delete the ExperienciaDocente",
                "operationId": "ExperienciaDocenteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/formacion_academica/": {
            "get": {
                "tags": [
                    "formacion_academica"
                ],
                "description": "get FormacionAcademica",
                "operationId": "FormacionAcademicaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FormacionAcademica"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "formacion_academica"
                ],
                "description": "create FormacionAcademica",
                "operationId": "FormacionAcademicaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FormacionAcademica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FormacionAcademica"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FormacionAcademica"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/formacion_academica/{id}": {
            "get": {
                "tags": [
                    "formacion_academica"
                ],
                "description": "get FormacionAcademica by id",
                "operationId": "FormacionAcademicaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FormacionAcademica"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "formacion_academica"
                ],
                "description": "update the FormacionAcademica",
                "operationId": "FormacionAcademicaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FormacionAcademica content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FormacionAcademica"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/FormacionAcademica"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "formacion_academica"
                ],
                "description": "delete the FormacionAcademica",
                "operationId": "FormacionAcademicaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/institucion/": {
            "get": {
                "tags": [
                    "institucion"
                ],
                "description": "get Institucion",
                "operationId": "InstitucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "institucion"
                ],
                "description": "create Institucion",
                "operationId": "InstitucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Institucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Institucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/institucion/{id}": {
            "get": {
                "tags": [
                    "institucion"
                ],
                "description": "get Institucion by id",
                "operationId": "InstitucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "institucion"
                ],
                "description": "update the Institucion",
                "operationId": "InstitucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Institucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "institucion"
                ],
                "description": "delete the Institucion",
                "operationId": "InstitucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/investigacion/": {
            "get": {
                "tags": [
                    "investigacion"
                ],
                "description": "get Investigacion",
                "operationId": "InvestigacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Investigacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "investigacion"
                ],
                "description": "create Investigacion",
                "operationId": "InvestigacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Investigacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Investigacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Investigacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/investigacion/{id}": {
            "get": {
                "tags": [
                    "investigacion"
                ],
                "description": "get Investigacion by id",
                "operationId": "InvestigacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Investigacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "investigacion"
                ],
                "description": "update the Investigacion",
                "operationId": "InvestigacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Investigacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Investigacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Investigacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "investigacion"
                ],
                "description": "delete the Investigacion",
                "operationId": "InvestigacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/nivel_formacion/": {
            "get": {
                "tags": [
                    "nivel_formacion"
                ],
                "description": "get NivelFormacion",
                "operationId": "NivelFormacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NivelFormacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "nivel_formacion"
                ],
                "description": "create NivelFormacion",
                "operationId": "NivelFormacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NivelFormacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NivelFormacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.NivelFormacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/nivel_formacion/{id}": {
            "get": {
                "tags": [
                    "nivel_formacion"
                ],
                "description": "get NivelFormacion by id",
                "operationId": "NivelFormacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NivelFormacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "nivel_formacion"
                ],
                "description": "update the NivelFormacion",
                "operationId": "NivelFormacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NivelFormacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NivelFormacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/NivelFormacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "nivel_formacion"
                ],
                "description": "delete the NivelFormacion",
                "operationId": "NivelFormacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/programa/": {
            "get": {
                "tags": [
                    "programa"
                ],
                "description": "get Programa",
                "operationId": "ProgramaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Programa"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "programa"
                ],
                "description": "create Programa",
                "operationId": "ProgramaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Programa content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Programa"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Programa"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/programa/{id}": {
            "get": {
                "tags": [
                    "programa"
                ],
                "description": "get Programa by id",
                "operationId": "ProgramaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Programa"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "programa"
                ],
                "description": "update the Programa",
                "operationId": "ProgramaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Programa content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Programa"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Programa"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "programa"
                ],
                "description": "delete the Programa",
                "operationId": "ProgramaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_dedicacion/": {
            "get": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "description": "get TipoDedicacion",
                "operationId": "TipoDedicacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "description": "create TipoDedicacion",
                "operationId": "TipoDedicacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoDedicacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_dedicacion/{id}": {
            "get": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "description": "get TipoDedicacion by id",
                "operationId": "TipoDedicacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "description": "update the TipoDedicacion",
                "operationId": "TipoDedicacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoDedicacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoDedicacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_dedicacion"
                ],
                "description": "delete the TipoDedicacion",
                "operationId": "TipoDedicacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_investigacion/": {
            "get": {
                "tags": [
                    "tipo_investigacion"
                ],
                "description": "get TipoInvestigacion",
                "operationId": "TipoInvestigacionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoInvestigacion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "tipo_investigacion"
                ],
                "description": "create TipoInvestigacion",
                "operationId": "TipoInvestigacionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoInvestigacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoInvestigacion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoInvestigacion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/tipo_investigacion/{id}": {
            "get": {
                "tags": [
                    "tipo_investigacion"
                ],
                "description": "get TipoInvestigacion by id",
                "operationId": "TipoInvestigacionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoInvestigacion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_investigacion"
                ],
                "description": "update the TipoInvestigacion",
                "operationId": "TipoInvestigacionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoInvestigacion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TipoInvestigacion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/TipoInvestigacion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_investigacion"
                ],
                "description": "delete the TipoInvestigacion",
                "operationId": "TipoInvestigacionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/titulo/": {
            "get": {
                "tags": [
                    "titulo"
                ],
                "description": "get Titulo",
                "operationId": "TituloController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Titulo"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "titulo"
                ],
                "description": "create Titulo",
                "operationId": "TituloController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Titulo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Titulo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Titulo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/titulo/{id}": {
            "get": {
                "tags": [
                    "titulo"
                ],
                "description": "get Titulo by id",
                "operationId": "TituloController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Titulo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "titulo"
                ],
                "description": "update the Titulo",
                "operationId": "TituloController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Titulo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Titulo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Titulo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "titulo"
                ],
                "description": "delete the Titulo",
                "operationId": "TituloController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "Cursos": {
            "title": "Cursos",
            "type": "object",
            "properties": {
                "ExperienciaDocenteId": {
                    "$ref": "#/definitions/ExperienciaDocente"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreCurso": {
                    "type": "string"
                }
            }
        },
        "ExperienciaDocente": {
            "title": "ExperienciaDocente",
            "type": "object",
            "properties": {
                "CampoEnseñanza": {
                    "type": "string"
                },
                "FechaDato": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaFinalizacion": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaInicio": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InstitucionId": {
                    "$ref": "#/definitions/Institucion"
                },
                "PersonaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoActividad": {
                    "type": "string"
                },
                "TipoDedicacionId": {
                    "$ref": "#/definitions/TipoDedicacion"
                },
                "Validacion": {
                    "type": "boolean"
                },
                "Vigente": {
                    "type": "boolean"
                }
            }
        },
        "FormacionAcademica": {
            "title": "FormacionAcademica",
            "type": "object",
            "properties": {
                "AreaConocimiento": {
                    "type": "string"
                },
                "FechaDato": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaFinalizacion": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaInicio": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InstitucionId": {
                    "$ref": "#/definitions/Institucion"
                },
                "NombreProyecto": {
                    "type": "string"
                },
                "PersonaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProgramaId": {
                    "$ref": "#/definitions/Programa"
                },
                "Titulo": {
                    "$ref": "#/definitions/Titulo"
                },
                "Validacion": {
                    "type": "boolean"
                },
                "Vigente": {
                    "type": "boolean"
                }
            }
        },
        "Institucion": {
            "title": "Institucion",
            "type": "object",
            "properties": {
                "Departamento": {
                    "type": "string"
                },
                "FechaDato": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Localidad": {
                    "type": "string"
                },
                "Municipio": {
                    "type": "string"
                },
                "NombreInstitucion": {
                    "type": "string"
                },
                "Pais": {
                    "type": "string"
                },
                "Vigente": {
                    "type": "boolean"
                }
            }
        },
        "Investigacion": {
            "title": "Investigacion",
            "type": "object",
            "properties": {
                "FechaDato": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaFinalizacion": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaInicio": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InstitucionId": {
                    "$ref": "#/definitions/Institucion"
                },
                "NombreInvestigacion": {
                    "type": "string"
                },
                "PersonaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoInvestigacionId": {
                    "$ref": "#/definitions/TipoInvestigacion"
                },
                "Vigente": {
                    "type": "boolean"
                }
            }
        },
        "NivelFormacion": {
            "title": "NivelFormacion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreNivel": {
                    "type": "string"
                }
            }
        },
        "Programa": {
            "title": "Programa",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InstitucionId": {
                    "$ref": "#/definitions/Institucion"
                },
                "NivelFormacion": {
                    "$ref": "#/definitions/NivelFormacion"
                },
                "NombrePrograma": {
                    "type": "string"
                }
            }
        },
        "TipoDedicacion": {
            "title": "TipoDedicacion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreTipoDedicacion": {
                    "type": "string"
                }
            }
        },
        "TipoInvestigacion": {
            "title": "TipoInvestigacion",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreTipoInvestigacion": {
                    "type": "string"
                }
            }
        },
        "Titulo": {
            "title": "Titulo",
            "type": "object",
            "properties": {
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "Programa": {
                    "$ref": "#/definitions/Programa"
                }
            }
        }
    },
    "tags": [
        {
            "name": "programa",
            "description": "ProgramaController oprations for Programa\n"
        },
        {
            "name": "formacion_academica",
            "description": "FormacionAcademicaController oprations for FormacionAcademica\n"
        },
        {
            "name": "experiencia_docente",
            "description": "ExperienciaDocenteController oprations for ExperienciaDocente\n"
        },
        {
            "name": "cursos",
            "description": "CursosController oprations for Cursos\n"
        },
        {
            "name": "institucion",
            "description": "InstitucionController oprations for Institucion\n"
        },
        {
            "name": "titulo",
            "description": "TituloController oprations for Titulo\n"
        },
        {
            "name": "tipo_investigacion",
            "description": "TipoInvestigacionController oprations for TipoInvestigacion\n"
        },
        {
            "name": "tipo_dedicacion",
            "description": "TipoDedicacionController oprations for TipoDedicacion\n"
        },
        {
            "name": "investigacion",
            "description": "InvestigacionController oprations for Investigacion\n"
        },
        {
            "name": "nivel_formacion",
            "description": "NivelFormacionController oprations for NivelFormacion\n"
        }
    ]
}